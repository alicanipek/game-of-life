{"version":3,"sources":["Components/Board.tsx","Components/Game.tsx","App.tsx","index.tsx"],"names":["Board","board","onClick","table","r","cols","c","className","push","key","e","length","Game","row","col","React","useState","Array","fill","map","setBoard","isPlaying","setIsPlaying","useEffect","setTimeout","newBoard","neighbors","updateBoard","handleClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07125d2c.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\n\ninterface Props {\n    board: number[][];\n    onClick: (\n        ev: React.MouseEvent<HTMLTableDataCellElement>,\n        r: number,\n        c: number\n    ) => void;\n}\n\nfunction Board({ board, onClick }: Props): ReactElement {\n    const table = [];\n    for (let r = 0; r < board.length; r++) {\n        let cols = [];\n        for (let c = 0; c < board[r].length; c++) {\n            let className = board[r][c] === 0 ? \"dead\" : \"alive\";\n            cols.push(\n                <td\n                    key={c}\n                    className={className}\n                    onClick={(e) => onClick(e, r, c)}\n                ></td>\n            );\n        }\n        table.push(<tr key={r}>{cols}</tr>);\n    }\n    return (\n        <table>\n            <tbody>{table}</tbody>\n        </table>\n    );\n}\n\nexport default Board;\n","import React, { ReactElement, useState } from \"react\";\nimport Board from \"./Board\";\n\ninterface Props {\n    row: number;\n    col: number;\n}\nconst updateBoard = (board: number[][]) => {\n    let newBoard: number[][] = [];\n    for (let r = 0; r < board.length; r++) {\n        let cols = [];\n        for (let c = 0; c < board[r].length; c++) {\n            let neighbors = 0;\n            if (c - 1 >= 0 && board[r][c - 1] === 1) neighbors++;\n            if (c - 1 >= 0 && r - 1 >= 0 && board[r - 1][c - 1] === 1)\n                neighbors++;\n            if (c - 1 >= 0 && r + 1 < board.length && board[r + 1][c - 1] === 1)\n                neighbors++;\n            if (c + 1 <= board[r].length && board[r][c + 1] === 1) neighbors++;\n            if (\n                c + 1 <= board[r].length &&\n                r + 1 < board.length &&\n                board[r + 1][c + 1] === 1\n            )\n                neighbors++;\n            if (\n                c + 1 <= board[r].length &&\n                r - 1 >= 0 &&\n                board[r - 1][c + 1] === 1\n            )\n                neighbors++;\n            if (r - 1 >= 0 && board[r - 1][c] === 1) neighbors++;\n            if (r + 1 < board.length && board[r + 1][c] === 1) neighbors++;\n            if (board[r][c] === 1 && (neighbors < 2 || neighbors > 3)) {\n                cols.push(0);\n            } else if (board[r][c] === 0 && neighbors === 3) {\n                cols.push(1);\n            } else {\n                cols.push(board[r][c]);\n            }\n        }\n        newBoard.push(cols);\n    }\n    return newBoard;\n};\n\nfunction Game({ row, col }: Props): ReactElement {\n    const [board, setBoard] = React.useState<number[][]>(\n        new Array(row).fill(0).map(() => new Array(col).fill(0))\n    );\n\n    const [isPlaying, setIsPlaying] = useState(false);\n    React.useEffect(() => {\n        if (!isPlaying) return;\n        else {\n            setTimeout(() => {\n                setBoard(updateBoard(board));\n            }, 200);\n        }\n    });\n    const handleStart = () => {\n        setIsPlaying(!isPlaying);\n    };\n    const handleReset = () => {\n        setBoard(new Array(row).fill(0).map(() => new Array(col).fill(0)));\n        setIsPlaying(false);\n    };\n\n    const handleClick = (r: number, c: number) => {\n        let newBoard = [...board];\n        newBoard[r][c] = board[r][c] === 1 ? 0 : 1;\n        setBoard(newBoard);\n    };\n    return (\n        <>\n            <Board board={board} onClick={(e, r, c) => handleClick(r, c)} />\n            <button onClick={handleStart}>\n                {isPlaying ? \"Stop\" : \"Start\"}\n            </button>\n            <button onClick={handleReset}>Reset</button>\n        </>\n    );\n}\n\nexport default Game;\n","import React from \"react\";\nimport Game from \"./Components/Game\";\n\nfunction App() {\n    return <Game row={43} col={92} />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}